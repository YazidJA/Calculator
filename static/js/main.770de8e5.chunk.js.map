{"version":3,"sources":["index.js","App.js","Calculator.jsx"],"names":["ReactDOM","render","StrictMode","document","getElementById","operators","endOperators","App","state","result","addEventListener","this","keypress","bind","removeEventListener","setState","key","array1","split","index1","length","array2","index2","test","join","replace","e","equal","input","target","innerHTML","expression","i","match","slice","eval","toString","display","onClear","clear","onNumber","number","onEqual","onKeyPress","Component","Calculator","props","className","colSpan","id","onClick","rowSpan"],"mappings":"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","file":"static/js/main.770de8e5.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);","import React, { Component } from \"react\";\nimport Calculator from \"./Calculator\";\n\n// To do (some day...):\n\n// Add Rounding\n// Limit Input Length\n// Clean up code\n\nconst operators = /[-+*/]/;\nconst endOperators = /\\D+$/;\n\nclass App extends Component {\n  state = {\n    result: \"0\",\n  };\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.keypress.bind(this));\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.keypress.bind(this));\n  }\n\n  clear() {\n    this.setState({ result: \"0\" });\n  }\n\n  input(key) {\n    let result = this.state.result;\n    let array1 = result.split(/[-+*/]/);\n    let index1 = array1.length - 1;\n    let array2 = result.split(\"\");\n    let index2 = array2.length - 1;\n\n    // if the key is a 0\n    if (key === \"0\" && result === \"0\") {\n      return;\n    }\n    // if the key is a Number\n    else if (key >= 0) {\n      if (result === \"0\") {\n        this.setState({ result: key });\n      } else {\n        this.setState({ result: result + key });\n      }\n    }\n    // if the key is a Point\n    else if (key === \".\") {\n      if (/[.]/.test(array1[index1])) {\n        return;\n      } else {\n        this.setState({ result: result + key });\n      }\n    }\n    // if the operator is Minus\n    else if (key === \"-\") {\n      if (array2[index2] === \"+\") {\n        array2[index2] = key;\n        this.setState({ result: array2.join(\"\") });\n      } else if (array2[index2] === \"-\") {\n        array2[index2] = \"\";\n        this.setState({ result: array2.join(\"\") });\n      } else {\n        this.setState({ result: result + key });\n      }\n    }\n    // if there are double operators\n    else if (operators.test(key) && endOperators.test(result)) {\n      this.setState({ result: result.replace(/\\D+$/, key) });\n    }\n    // catch case\n    else if (result !== \"0\") {\n      this.setState({ result: result + key });\n    }\n  }\n\n  keypress(e) {\n    let key = e.key;\n    let regex = /[0-9-+*/.]/;\n    if (key === \"=\" || key === \"Enter\") {\n      this.equal();\n    } else if (regex.test(key)) {\n      this.input(key);\n    }\n  }\n\n  number(e) {\n    let key = e.target.innerHTML;\n    this.input(key);\n  }\n\n  equal() {\n    let expression = this.state.result;\n    if (endOperators.test(expression)) {\n      let i = expression.match(endOperators)[0].length;\n      expression = expression.slice(0, -i);\n    }\n    expression.replace(/(x|\\/|\\+)â€‘/, \"$1-\");\n    let result = eval(expression).toString();\n    this.setState({ result });\n  }\n\n  render() {\n    return (\n      <Calculator\n        display={this.state.result}\n        onClear={this.clear.bind(this)}\n        onNumber={this.number.bind(this)}\n        onEqual={this.equal.bind(this)}\n        onKeyPress={this.keypress.bind(this)}\n      />\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nconst Calculator = (props) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <tbody>\r\n        <tr>\r\n          <td colSpan=\"4\" id=\"display\">\r\n            {props.display}\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td\r\n            id=\"clear\"\r\n            onClick={props.onClear}\r\n            colSpan=\"2\"\r\n            className=\"operation\">\r\n            C\r\n          </td>\r\n          <td id=\"divide\" className=\"operation\" onClick={props.onNumber}>\r\n            /\r\n          </td>\r\n          <td id=\"multiply\" className=\"operation\" onClick={props.onNumber}>\r\n            *\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td id=\"seven\" onClick={props.onNumber}>\r\n            7\r\n          </td>\r\n          <td id=\"eight\" onClick={props.onNumber}>\r\n            8\r\n          </td>\r\n          <td id=\"nine\" onClick={props.onNumber}>\r\n            9\r\n          </td>\r\n          <td id=\"subtract\" className=\"operation\" onClick={props.onNumber}>\r\n            -\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td id=\"four\" onClick={props.onNumber}>\r\n            4\r\n          </td>\r\n          <td id=\"five\" onClick={props.onNumber}>\r\n            5\r\n          </td>\r\n          <td id=\"six\" onClick={props.onNumber}>\r\n            6\r\n          </td>\r\n          <td id=\"add\" className=\"operation\" onClick={props.onNumber}>\r\n            +\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td id=\"one\" onClick={props.onNumber}>\r\n            1\r\n          </td>\r\n          <td id=\"two\" onClick={props.onNumber}>\r\n            2\r\n          </td>\r\n          <td id=\"three\" onClick={props.onNumber}>\r\n            3\r\n          </td>\r\n          <td\r\n            rowSpan=\"2\"\r\n            id=\"equals\"\r\n            className=\"operation\"\r\n            onClick={props.onEqual}>\r\n            =\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td id=\"zero\" colSpan=\"2\" onClick={props.onNumber}>\r\n            0\r\n          </td>\r\n          <td id=\"decimal\" onClick={props.onNumber}>\r\n            .\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n"],"sourceRoot":""}